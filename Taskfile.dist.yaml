---
version: "3"

tasks:
  template:
    desc: Fetch template updates
    interactive: true
    env:
      GIT_CONFIG_COUNT: 1
      GIT_CONFIG_KEY_0: commit.gpgsign
      GIT_CONFIG_VALUE_0: false
    cmds:
      - >
        copier
        update
        --answers-file
        .copier-answers.yaml
        {{ .CLI_ARGS }}
  flake:
    desc: Update flake.lock
    cmds:
      - >
        nix
        --accept-flake-config
        --extra-experimental-features 'nix-command flakes'
        --no-warn-dirty
        flake
        update
        {{ .CLI_ARGS }}
  fmt:
    desc: Format files
    cmds:
      - task: install
        vars:
          CLI_ARGS: ""
      - >
        trunk
        fmt
        {{ .CLI_ARGS }}
  lint:
    desc: Lint files
    cmds:
      - task: install
        vars:
          CLI_ARGS: ""
      - >
        trunk
        check
        {{ .CLI_ARGS }}
  remove-node-modules:
    desc: Remove node_modules
    internal: true
    cmds:
      - >
        rm
        --recursive
        --force
        ./node_modules
    status:
      - >
        test
        '!'
        -d
        ./node_modules
  remove-pnpm-store:
    desc: Remove local pnpm store
    internal: true
    cmds:
      - >
        rm
        --recursive
        --force
        ./.pnpm-store
    status:
      - >
        test
        '!'
        -d
        ./.pnpm-store
  prune:
    desc: Remove everything except caches
    cmds:
      - defer:
          task: remove-node-modules
      - defer:
          task: clean
  purge:
    desc: Remove everything
    cmds:
      - defer:
          task: remove-pnpm-store
      - defer:
          task: prune
  install:
    desc: Install dependencies
    sources:
      - "./package.json"
      - "./pnpm-lock.yaml"
      - ".npmrc"
      - ./flake.lock
      - ./*.nix
      - ./Taskfile.dist.{yaml,yml}
      - ./{taskfile,Taskfile}.{yaml,yml}
    generates:
      - "./node_modules/**/*"
      - "./.pnpm-store/**/*"
    cmds:
      - >
        pnpm
        install
        {{ .CLI_ARGS }}
  dev:
    desc: Run all apps in development mode
    interactive: true
    cmds:
      - task: install
        vars:
          CLI_ARGS: ""
      - >
        pnpm
        run
        dev
        --
        {{ .CLI_ARGS }}
  build-internal:
    desc: Build all apps
    internal: true
    sources:
      - "./src/**/*"
      - "./public/**/*"
      - "./index.html"
      - "./tsconfig.json"
      - "./vite.config.ts"
      - ./flake.lock
      - ./*.nix
      - ./Taskfile.dist.{yaml,yml}
      - ./{taskfile,Taskfile}.{yaml,yml}
    generates:
      - "./build/**/*"
    cmds:
      - >
        pnpm
        run
        build
        --
        {{ .CLI_ARGS }}
  build:
    desc: Build all apps
    cmds:
      - task: install
        vars:
          CLI_ARGS: ""
      - task: build-internal
  clean:
    desc: Remove build outputs
    cmds:
      - >
        pnpm
        run
        clean
        --
        {{ .CLI_ARGS }}
    status:
      - >
        test
        '!'
        -d
        ./build/
  update:
    desc: Update dependencies
    cmds:
      - task: install
        vars:
          CLI_ARGS: ""
      - >
        pnpm
        run
        update
        {{ .CLI_ARGS }}
      - task: install
        vars:
          CLI_ARGS: ""
  docker:
    desc: Run all apps with Docker Compose
    interactive: true
    cmds:
      - >
        docker
        compose
        up
        --build
        --force-recreate
        --remove-orphans
        {{ .CLI_ARGS }}
  pnpm:
    desc: Run pnpm
    cmds:
      - >
        pnpm
        run
        pnpm
        {{ .CLI_ARGS }}
